# Name that is shown as workflowname in github
name: Lint and run ansible playbook
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # first job: validate playbook using ansible-lint
  validate:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Run ansible-lint
        # replace `main` with any valid ref, or tags like `v6`
        uses: ansible/ansible-lint@v6.20.3
        with:
          working_directory: "ansible"
  run-playbook:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # The validate Job need to be sucessfull
    needs: [ validate ]
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
      # Install python dependencies
      - name: Install dependencies Including Ansible
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f test-requirements.txt ]; then pip install -r test-requirements.txt; fi
      # Write inventory from github secrets to file
      - name: write inventory to file
        env:
          INVENTORY: ${{ secrets.INVENTORY }}
        run: 'echo "$INVENTORY" > inventory'
      # Install ssh key from github secrets to .ssh/
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          name: id_rsa # optional
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          config: ${{ secrets.CONFIG }} # ssh_config; optional
          if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)
    
      - name: run playbook
        run: |
          ansible-playbook -i inventory ansible/hello-world.yaml
          